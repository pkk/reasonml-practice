type t;

[@bs.new] external make: string => t = "URL";
[@bs.new] external makeWithBase: (string, string) => t = "URL";
[@bs.get] external hash: t => string = "";
[@bs.set] external setHash: (t, string) => unit = "hash";
[@bs.get] external host: t => string = "";
[@bs.set] external setHost: (t, string) => unit = "host";
[@bs.get] external hostname: t => string = "";
[@bs.set] external setHostname: (t, string) => unit = "hostname";
[@bs.get] external href: t => string = "";
[@bs.set] external setHref: (t, string) => unit = "href";
[@bs.get] external origin: t => string = "";
[@bs.get] external password: t => string = "";
[@bs.set] external setPassword: (t, string) => unit = "password";
[@bs.get] external pathname: t => string = "";
[@bs.set] external setPathname: (t, string) => unit = "pathname";
[@bs.get] external port: t => string = "";
[@bs.set] external setPort: (t, string) => unit = "port";
[@bs.get] external protocol: t => string = "";
[@bs.set] external setProtocol: (t, string) => unit = "protocol";
[@bs.get] external search: t => string = "";
[@bs.set] external setSearch: (t, string) => unit = "search";
[@bs.get] external searchParams: t => URLSearchParamsRe.t = "";
[@bs.get] external username: t => string = "";
[@bs.set] external setUsername: (t, string) => unit = "username";
[@bs.get] external toJson: t => string = "";

[@bs.val] [@bs.scope "URL"] external createObjectURL : FileRe.t => string = "";
[@bs.val] [@bs.scope "URL"] external revokeObjectURL : string => unit = "";
